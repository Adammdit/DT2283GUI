package ie.dit.miedziejewski.adam;

import java.text.DecimalFormat;

import android.app.Activity;
import android.graphics.Color;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.SparseArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;
import android.widget.CheckedTextView;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

public class MyExpandableListAdapter extends BaseExpandableListAdapter 
{
	private final SparseArray<Group> groups;
	public LayoutInflater inflater;
	public Activity activity;

	public MyExpandableListAdapter(Activity act, SparseArray<Group> groups) 
	{
		activity = act;
		this.groups = groups;
		inflater = act.getLayoutInflater();
	}

	@Override
	public Object getChild(int groupPosition, int childPosition) 
	{
		return groups.get(groupPosition).children.get(childPosition);
	}
	
	@Override
	public long getChildId(int groupPosition, int childPosition) 
	{
		return 0;
	}
	
	
	@Override
	public View getChildView(int groupPosition, final int childPosition,
			boolean isLastChild, View convertView, ViewGroup parent) 
	{
		final Product children = (Product) getChild(groupPosition, childPosition);

		TextView text, text2;
		View rowView = convertView;

		
		if (rowView == null) 
		{
			rowView = inflater.inflate(R.layout.listrow_details, null);
			EditText quantity = (EditText) rowView.findViewById(R.id.qty);
			//attach the TextWatcher listener to the EditText
		    quantity.addTextChangedListener(new MyTextWatcher(rowView));
		    
		    // if(position % 2 == 0){
		    //	 rowView.setBackgroundColor(Color.rgb(238, 233, 233));
		    // }
		}

		EditText quantity = (EditText) rowView.findViewById(R.id.qty);
		quantity.setTag(children);
		if(children.qty != 0)
		{
			quantity.setText(String.valueOf(children.qty));
		}
		else 
		{
		    quantity.setText("");
		}
		
		
		
    
		text = (TextView) rowView.findViewById(R.id.textView1);
		text.setText(children.gunName);
		
		text2 = (TextView) rowView.findViewById(R.id.textView2);
		text2.setText(children.gunPrice.toString());
		
		// text3 = (TextView) rowView.findViewById(R.id.qty);
		// text3.setText(children.qty.toString());
		// children.qty = (text3.toString());
		
		ImageView imageView = (ImageView)rowView.findViewById(R.id.weaponeImage);
    
		rowView.setOnClickListener(new OnClickListener() 
		{
			@Override
			public void onClick(View v) 
			{
				Toast.makeText(activity, children.qty,
				Toast.LENGTH_SHORT).show();
			}
		});

		if (text.getText().equals("ACP 45"))
		{	
			imageView.setImageResource(R.drawable.acp45);
		}
		else if (text.getText().equals("ACP 5"))
		{
			imageView.setImageResource(R.drawable.acp5);
		}
		else if (text.getText().equals("ATI"))
		{
			imageView.setImageResource(R.drawable.ati);
		}
		else if (text.getText().equals("Charter"))
		{
			imageView.setImageResource(R.drawable.charter);
		}
		else if (text.getText().equals("Pantera"))
		{
			imageView.setImageResource(R.drawable.pantera);
		}
		else if (text.getText().equals("SPL 38"))
		{
			imageView.setImageResource(R.drawable.spl38);
		}
		else
		{
			imageView.setImageResource(R.drawable.taurus);
		}

		return rowView;
	}

	@Override
	public int getChildrenCount(int groupPosition) 
	{
		return groups.get(groupPosition).children.size();
	}

	@Override
	public Object getGroup(int groupPosition) 
	{
		return groups.get(groupPosition);
	}

	@Override
	public int getGroupCount() 
	{
		return groups.size();
	}

	@Override
	public void onGroupCollapsed(int groupPosition) 
	{
		super.onGroupCollapsed(groupPosition);
	}

	@Override
	public void onGroupExpanded(int groupPosition) 
	{
		super.onGroupExpanded(groupPosition);
	}

	@Override
	public long getGroupId(int groupPosition) 
	{
		return 0;
	}

	@Override
	public View getGroupView(int groupPosition, boolean isExpanded,
			View convertView, ViewGroup parent) 
	{
		if (convertView == null) 
		{
			convertView = inflater.inflate(R.layout.listrow_group, null);
		}
		
		Group group = (Group) getGroup(groupPosition);
		((CheckedTextView) convertView).setText(group.string);
		((CheckedTextView) convertView).setChecked(isExpanded);
   
		return convertView;
	}

	@Override
	public boolean hasStableIds() 
	{
		return false;
	}

	@Override
	public boolean isChildSelectable(int groupPosition, int childPosition) 
	{
		return false;
	}
	
	private class MyTextWatcher implements TextWatcher{
		 
		  private View view;
		  private MyTextWatcher(View view) {
		   this.view = view;
		  }
		 
		  public void beforeTextChanged(CharSequence s, int start, int count, int after) {
		   //do nothing
		  }
		  public void onTextChanged(CharSequence s, int start, int before, int count) {
		   //do nothing
		  }
		  public void afterTextChanged(Editable s) {
		    
		   DecimalFormat df = new DecimalFormat("0.00##");
		   String qtyString = s.toString().trim();
		   int quantity = qtyString.equals("") ? 0:Integer.valueOf(qtyString);
		    
		   EditText qtyView = (EditText) view.findViewById(R.id.qty);
		   Product product = (Product) qtyView.getTag();
		    
		   if(product.qty != quantity){
		 

		 
		    product.qty = quantity;
		     
		     
		    if(product.qty != 0){
		     qtyView.setText(String.valueOf(product.qty));
		    }
		    else {
		     qtyView.setText("");
		    }
		    
		   }
		    
		   return;
		  }
		 }
}


